{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yagrawal\\\\OneDrive - Ribbon Communications Operating Company, Inc\\\\Desktop\\\\config_tool\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './components/Sidebar';\nimport ConfigPanel from './components/ConfigPanel';\nimport NENode from './components/nodes/NENode';\nimport CardNode from './components/nodes/CardNode';\nimport PortNode from './components/nodes/PortNode';\nimport { generateConfiguration, transformToBackendPayload } from './api';\nimport './App.css';\nimport './components/nodes/node-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  ne: NENode,\n  card: CardNode,\n  port: PortNode\n};\nconst App = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(JSON.parse(localStorage.getItem('diagram-nodes')) || []);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(JSON.parse(localStorage.getItem('diagram-edges')) || []);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [generatedConfig, setGeneratedConfig] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [drawingMode, setDrawingMode] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState(null);\n  const [preview, setPreview] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('diagram-nodes', JSON.stringify(nodes));\n    localStorage.setItem('diagram-edges', JSON.stringify(edges));\n  }, [nodes, edges]);\n  useEffect(() => {\n    const handleEsc = event => {\n      if (event.keyCode === 27) {\n        setDrawingMode(null);\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n  useEffect(() => {\n    // Initialize IDs from localStorage\n    const loadedNodes = JSON.parse(localStorage.getItem('diagram-nodes')) || [];\n    if (loadedNodes.length > 0) {\n      const initialIds = {\n        ne: 0,\n        card: 0,\n        port: 0\n      };\n      loadedNodes.forEach(node => {\n        const parts = node.id.split('_');\n        if (parts.length === 2) {\n          const [type, number] = parts;\n          if (type in initialIds) {\n            const num = parseInt(number, 10);\n            if (!isNaN(num) && num > initialIds[type]) {\n              initialIds[type] = num;\n            }\n          }\n        }\n      });\n      ids.current = initialIds;\n    }\n  }, []); // Run only once on mount\n\n  const ids = useRef({\n    ne: 0,\n    card: 0,\n    port: 0\n  });\n  const getId = type => {\n    ids.current[type] = (ids.current[type] || 0) + 1;\n    return `${type}_${ids.current[type]}`;\n  };\n  const onConnect = useCallback(params => {\n    setEdges(eds => {\n      const isSourceInvolved = eds.some(edge => edge.source === params.source || edge.target === params.source);\n      const isTargetInvolved = eds.some(edge => edge.source === params.target || edge.target === params.target);\n      if (isSourceInvolved || isTargetInvolved) {\n        alert(\"A port can only be connected to one other port.\");\n        return eds;\n      }\n      const sourcePortNode = nodes.find(n => n.id === params.source);\n      const targetPortNode = nodes.find(n => n.id === params.target);\n      if (!sourcePortNode || !targetPortNode) {\n        return eds; // Should not happen\n      }\n      const sourceCardNode = nodes.find(n => n.id === sourcePortNode.parentNode);\n      const targetCardNode = nodes.find(n => n.id === targetPortNode.parentNode);\n      if (!sourceCardNode || !targetCardNode) {\n        return eds; // Should not happen\n      }\n      const sourceNeNode = nodes.find(n => n.id === sourceCardNode.parentNode);\n      const targetNeNode = nodes.find(n => n.id === targetCardNode.parentNode);\n      const isInternal = sourceNeNode && targetNeNode && sourceNeNode.id === targetNeNode.id;\n      const newEdge = {\n        ...params,\n        data: {\n          is_internal: isInternal,\n          is_bidirectional: true // Default to bidirectional\n        }\n      };\n      return addEdge(newEdge, eds);\n    });\n  }, [nodes, setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    const findNode = id => nodes.find(n => n.id === id);\n    const element = findNode(node.id);\n    if (!element) return;\n    setSelectedElement({\n      id: element.id,\n      type: element.type,\n      data: element.data\n    });\n  }, [nodes]);\n  const onEdgeClick = useCallback((event, edge) => {\n    setSelectedElement({\n      id: edge.id,\n      type: 'edge',\n      data: edge.data || {}\n    });\n  }, []);\n  const deleteNode = nodeId => {\n    const nodesToDelete = new Set();\n    const queue = [nodeId];\n    while (queue.length > 0) {\n      const currentId = queue.shift();\n      if (!nodesToDelete.has(currentId)) {\n        nodesToDelete.add(currentId);\n        nodes.forEach(node => {\n          if (node.parentNode === currentId) {\n            queue.push(node.id);\n          }\n        });\n      }\n    }\n    setNodes(nds => nds.filter(node => !nodesToDelete.has(node.id)));\n    setEdges(eds => eds.filter(edge => !nodesToDelete.has(edge.source) && !nodesToDelete.has(edge.target)));\n    setSelectedElement(null);\n  };\n  const updateEdgeConfig = (edgeId, field, value) => {\n    setEdges(eds => eds.map(edge => {\n      if (edge.id === edgeId) {\n        return {\n          ...edge,\n          data: {\n            ...edge.data,\n            [field]: value\n          }\n        };\n      }\n      return edge;\n    }));\n    if (selectedElement && selectedElement.id === edgeId) {\n      setSelectedElement(prev => ({\n        ...prev,\n        data: {\n          ...prev.data,\n          [field]: value\n        }\n      }));\n    }\n  };\n  const updateNodeConfig = (nodeId, field, value) => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        const newData = {\n          ...node.data,\n          [field]: value\n        };\n        if (field === 'NE_IP' || field === 'card_name' || field === 'port_no') {\n          newData.label = `${value}`;\n        }\n        return {\n          ...node,\n          data: newData\n        };\n      }\n      return node;\n    }));\n    if (selectedElement && selectedElement.id === nodeId) {\n      setSelectedElement(prev => ({\n        ...prev,\n        data: {\n          ...prev.data,\n          [field]: value\n        }\n      }));\n    }\n  };\n  const handleGenerateConfig = async () => {\n    const config = await generateConfiguration(nodes, edges);\n    if (config) {\n      setGeneratedConfig(config);\n    }\n  };\n  const handleClearDiagram = () => {\n    localStorage.removeItem('diagram-nodes');\n    localStorage.removeItem('diagram-edges');\n    setNodes([]);\n    setEdges([]);\n    ids.current = {\n      ne: 0,\n      card: 0,\n      port: 0\n    };\n  };\n  const onMouseDown = event => {\n    if (!drawingMode || !reactFlowInstance) return;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    };\n    setIsDrawing(true);\n    setStartPos(position);\n    setPreview({\n      x: position.x,\n      y: position.y,\n      width: 0,\n      height: 0\n    });\n  };\n  const onMouseMove = event => {\n    if (!isDrawing) return;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    };\n    const width = Math.abs(position.x - startPos.x);\n    const height = Math.abs(position.y - startPos.y);\n    const newX = Math.min(position.x, startPos.x);\n    const newY = Math.min(position.y, startPos.y);\n    setPreview({\n      x: newX,\n      y: newY,\n      width,\n      height\n    });\n  };\n  const onMouseUp = event => {\n    if (!isDrawing || !preview || preview.width === 0 || preview.height === 0) {\n      setIsDrawing(false);\n      setPreview(null);\n      return;\n    }\n    event.preventDefault();\n    const projectedPosition = reactFlowInstance.project({\n      x: preview.x,\n      y: preview.y\n    });\n    const {\n      x,\n      y,\n      width,\n      height\n    } = {\n      ...preview,\n      ...projectedPosition\n    };\n    const newNodeId = getId(drawingMode);\n    let newNode;\n    let parentNode = null;\n    const currentNodes = reactFlowInstance.getNodes();\n    if (drawingMode === 'card') {\n      parentNode = currentNodes.find(n => n.type === 'ne' && x >= n.position.x && y >= n.position.y && x + width <= n.position.x + n.data.width && y + height <= n.position.y + n.data.height);\n      if (!parentNode) {\n        alert('Cards can only be placed inside Network Elements.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    } else if (drawingMode === 'port') {\n      parentNode = currentNodes.find(n => n.type === 'card' && n.positionAbsolute && x >= n.positionAbsolute.x && y >= n.positionAbsolute.y && x + width <= n.positionAbsolute.x + n.data.width && y + height <= n.positionAbsolute.y + n.data.height);\n      if (!parentNode) {\n        alert('Ports can only be placed inside Cards.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    }\n    const position = {\n      x: parentNode ? x - (parentNode.positionAbsolute ? parentNode.positionAbsolute.x : parentNode.position.x) : x,\n      y: parentNode ? y - (parentNode.positionAbsolute ? parentNode.positionAbsolute.y : parentNode.position.y) : y\n    };\n    const data = {\n      id: newNodeId,\n      label: newNodeId,\n      width,\n      height\n    };\n    switch (drawingMode) {\n      case 'ne':\n        data.NE_IP = '';\n        data.role = '';\n        break;\n      case 'card':\n        data.card_name = '';\n        data.slot_no = '';\n        data.service_card = false;\n        break;\n      case 'port':\n        data.port_no = '';\n        data.port_type = '';\n        data.if_index = '';\n        break;\n      default:\n        break;\n    }\n    newNode = {\n      id: newNodeId,\n      type: drawingMode,\n      position,\n      data,\n      parentNode: parentNode ? parentNode.id : undefined,\n      extent: parentNode ? 'parent' : undefined\n    };\n    setNodes(nds => nds.concat(newNode));\n    setIsDrawing(false);\n    setPreview(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        drawingMode: drawingMode,\n        setDrawingMode: setDrawingMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        ref: reactFlowWrapper,\n        children: [drawingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drawing-overlay\",\n          onMouseDown: onMouseDown,\n          onMouseMove: onMouseMove,\n          onMouseUp: onMouseUp,\n          children: preview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-node\",\n            style: {\n              position: 'absolute',\n              left: preview.x,\n              top: preview.y,\n              width: preview.width,\n              height: preview.height,\n              border: '1px dashed #000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), drawingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drawing-prompt\",\n          children: \"Drawing mode active. Press Esc to cancel.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onNodeClick: onNodeClick,\n          onEdgeClick: onEdgeClick,\n          nodeTypes: nodeTypes,\n          onlyRenderVisibleElements: true,\n          panOnDrag: !drawingMode,\n          zoomOnScroll: !drawingMode,\n          panOnScroll: false,\n          nodesDraggable: !drawingMode,\n          style: {\n            pointerEvents: drawingMode ? 'none' : 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfigPanel, {\n        selectedElement: selectedElement,\n        updateNodeConfig: updateNodeConfig,\n        deleteNode: deleteNode,\n        updateEdgeConfig: updateEdgeConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateConfig,\n        className: \"save-btn\",\n        children: \"Generate Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearDiagram,\n        className: \"clear-btn\",\n        children: \"Clear Diagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), generatedConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: generatedConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NRe3U8YjfJJMgayV7A5Jb5kt99o=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Background","Sidebar","ConfigPanel","NENode","CardNode","PortNode","generateConfiguration","transformToBackendPayload","jsxDEV","_jsxDEV","nodeTypes","ne","card","port","App","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","JSON","parse","localStorage","getItem","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","selectedElement","setSelectedElement","generatedConfig","setGeneratedConfig","isLoading","setIsLoading","drawingMode","setDrawingMode","isDrawing","setIsDrawing","startPos","setStartPos","preview","setPreview","setItem","stringify","handleEsc","event","keyCode","window","addEventListener","removeEventListener","loadedNodes","length","initialIds","forEach","node","parts","id","split","type","number","num","parseInt","isNaN","ids","current","getId","onConnect","params","eds","isSourceInvolved","some","edge","source","target","isTargetInvolved","alert","sourcePortNode","find","n","targetPortNode","sourceCardNode","parentNode","targetCardNode","sourceNeNode","targetNeNode","isInternal","newEdge","data","is_internal","is_bidirectional","onNodeClick","findNode","element","onEdgeClick","deleteNode","nodeId","nodesToDelete","Set","queue","currentId","shift","has","add","push","nds","filter","updateEdgeConfig","edgeId","field","value","map","prev","updateNodeConfig","newData","label","handleGenerateConfig","config","handleClearDiagram","removeItem","onMouseDown","preventDefault","reactFlowBounds","getBoundingClientRect","position","x","clientX","left","y","clientY","top","width","height","onMouseMove","Math","abs","newX","min","newY","onMouseUp","projectedPosition","project","newNodeId","newNode","currentNodes","getNodes","positionAbsolute","NE_IP","role","card_name","slot_no","service_card","port_no","port_type","if_index","undefined","extent","concat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","onInit","onlyRenderVisibleElements","panOnDrag","zoomOnScroll","panOnScroll","nodesDraggable","pointerEvents","variant","gap","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yagrawal/OneDrive - Ribbon Communications Operating Company, Inc/Desktop/config_tool/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n  MiniMap,\n  Background,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport Sidebar from './components/Sidebar';\nimport ConfigPanel from './components/ConfigPanel';\nimport NENode from './components/nodes/NENode';\nimport CardNode from './components/nodes/CardNode';\nimport PortNode from './components/nodes/PortNode';\nimport { generateConfiguration, transformToBackendPayload } from './api';\n\nimport './App.css';\nimport './components/nodes/node-styles.css';\n\nconst nodeTypes = {\n  ne: NENode,\n  card: CardNode,\n  port: PortNode,\n};\n\nconst App = () => {\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(JSON.parse(localStorage.getItem('diagram-nodes')) || []);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(JSON.parse(localStorage.getItem('diagram-edges')) || []);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [generatedConfig, setGeneratedConfig] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  \n  const [drawingMode, setDrawingMode] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState(null);\n  const [preview, setPreview] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('diagram-nodes', JSON.stringify(nodes));\n    localStorage.setItem('diagram-edges', JSON.stringify(edges));\n  }, [nodes, edges]);\n\n  useEffect(() => {\n    const handleEsc = (event) => {\n      if (event.keyCode === 27) {\n        setDrawingMode(null);\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Initialize IDs from localStorage\n    const loadedNodes = JSON.parse(localStorage.getItem('diagram-nodes')) || [];\n    if (loadedNodes.length > 0) {\n      const initialIds = { ne: 0, card: 0, port: 0 };\n      loadedNodes.forEach(node => {\n        const parts = node.id.split('_');\n        if (parts.length === 2) {\n          const [type, number] = parts;\n          if (type in initialIds) {\n            const num = parseInt(number, 10);\n            if (!isNaN(num) && num > initialIds[type]) {\n              initialIds[type] = num;\n            }\n          }\n        }\n      });\n      ids.current = initialIds;\n    }\n  }, []); // Run only once on mount\n\n  const ids = useRef({ ne: 0, card: 0, port: 0 });\n  const getId = (type) => {\n    ids.current[type] = (ids.current[type] || 0) + 1;\n    return `${type}_${ids.current[type]}`;\n  };\n\n  const onConnect = useCallback((params) => {\n    setEdges((eds) => {\n      const isSourceInvolved = eds.some(edge => edge.source === params.source || edge.target === params.source);\n      const isTargetInvolved = eds.some(edge => edge.source === params.target || edge.target === params.target);\n\n      if (isSourceInvolved || isTargetInvolved) {\n        alert(\"A port can only be connected to one other port.\");\n        return eds;\n      }\n\n      const sourcePortNode = nodes.find(n => n.id === params.source);\n      const targetPortNode = nodes.find(n => n.id === params.target);\n\n      if (!sourcePortNode || !targetPortNode) {\n        return eds; // Should not happen\n      }\n\n      const sourceCardNode = nodes.find(n => n.id === sourcePortNode.parentNode);\n      const targetCardNode = nodes.find(n => n.id === targetPortNode.parentNode);\n\n      if (!sourceCardNode || !targetCardNode) {\n        return eds; // Should not happen\n      }\n\n      const sourceNeNode = nodes.find(n => n.id === sourceCardNode.parentNode);\n      const targetNeNode = nodes.find(n => n.id === targetCardNode.parentNode);\n\n      const isInternal = sourceNeNode && targetNeNode && sourceNeNode.id === targetNeNode.id;\n\n      const newEdge = {\n        ...params,\n        data: {\n          is_internal: isInternal,\n          is_bidirectional: true // Default to bidirectional\n        }\n      };\n\n      return addEdge(newEdge, eds);\n    });\n  }, [nodes, setEdges]);\n\n  const onNodeClick = useCallback((event, node) => {\n    const findNode = (id) => nodes.find(n => n.id === id);\n    const element = findNode(node.id);\n    \n    if(!element) return;\n\n    setSelectedElement({\n        id: element.id,\n        type: element.type,\n        data: element.data\n    });\n  }, [nodes]);\n\n  const onEdgeClick = useCallback((event, edge) => {\n    setSelectedElement({\n        id: edge.id,\n        type: 'edge',\n        data: edge.data || {}\n    });\n  }, []);\n\n  const deleteNode = (nodeId) => {\n    const nodesToDelete = new Set();\n    const queue = [nodeId];\n    \n    while (queue.length > 0) {\n      const currentId = queue.shift();\n      if (!nodesToDelete.has(currentId)) {\n        nodesToDelete.add(currentId);\n        nodes.forEach(node => {\n          if (node.parentNode === currentId) {\n            queue.push(node.id);\n          }\n        });\n      }\n    }\n\n    setNodes((nds) => nds.filter((node) => !nodesToDelete.has(node.id)));\n    setEdges((eds) => eds.filter((edge) => !nodesToDelete.has(edge.source) && !nodesToDelete.has(edge.target)));\n    setSelectedElement(null);\n  };\n\n  const updateEdgeConfig = (edgeId, field, value) => {\n    setEdges((eds) =>\n      eds.map((edge) => {\n        if (edge.id === edgeId) {\n          return { ...edge, data: { ...edge.data, [field]: value } };\n        }\n        return edge;\n      })\n    );\n    if (selectedElement && selectedElement.id === edgeId) {\n        setSelectedElement(prev => ({...prev, data: {...prev.data, [field]: value}}));\n    }\n  };\n\n  const updateNodeConfig = (nodeId, field, value) => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === nodeId) {\n          const newData = { ...node.data, [field]: value };\n          if (field === 'NE_IP' || field === 'card_name' || field === 'port_no') {\n              newData.label = `${value}`;\n          }\n          return { ...node, data: newData };\n        }\n        return node;\n      })\n    );\n    if (selectedElement && selectedElement.id === nodeId) {\n        setSelectedElement(prev => ({...prev, data: {...prev.data, [field]: value}}));\n    }\n  };\n  \n  const handleGenerateConfig = async () => {\n      const config = await generateConfiguration(nodes, edges);\n      if (config) {\n        setGeneratedConfig(config);\n      }\n  };\n\n  const handleClearDiagram = () => {\n    localStorage.removeItem('diagram-nodes');\n    localStorage.removeItem('diagram-edges');\n    setNodes([]);\n    setEdges([]);\n    ids.current = { ne: 0, card: 0, port: 0 };\n  };\n\n  const onMouseDown = (event) => {\n    if (!drawingMode || !reactFlowInstance) return;\n    event.preventDefault();\n    \n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    };\n\n    setIsDrawing(true);\n    setStartPos(position);\n    setPreview({ x: position.x, y: position.y, width: 0, height: 0 });\n  };\n\n  const onMouseMove = (event) => {\n    if (!isDrawing) return;\n    event.preventDefault();\n\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    };\n\n    const width = Math.abs(position.x - startPos.x);\n    const height = Math.abs(position.y - startPos.y);\n    const newX = Math.min(position.x, startPos.x);\n    const newY = Math.min(position.y, startPos.y);\n\n    setPreview({ x: newX, y: newY, width, height });\n  };\n\n  const onMouseUp = (event) => {\n    if (!isDrawing || !preview || preview.width === 0 || preview.height === 0) {\n      setIsDrawing(false);\n      setPreview(null);\n      return;\n    }\n    event.preventDefault();\n\n    const projectedPosition = reactFlowInstance.project({\n        x: preview.x,\n        y: preview.y,\n    });\n\n    const { x, y, width, height } = { ...preview, ...projectedPosition };\n    const newNodeId = getId(drawingMode);\n    let newNode;\n    let parentNode = null;\n\n    const currentNodes = reactFlowInstance.getNodes();\n\n    if (drawingMode === 'card') {\n      parentNode = currentNodes.find(n => \n        n.type === 'ne' &&\n        x >= n.position.x &&\n        y >= n.position.y &&\n        x + width <= n.position.x + n.data.width &&\n        y + height <= n.position.y + n.data.height\n      );\n      if (!parentNode) {\n        alert('Cards can only be placed inside Network Elements.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    } else if (drawingMode === 'port') {\n      parentNode = currentNodes.find(n =>\n        n.type === 'card' &&\n        n.positionAbsolute &&\n        x >= n.positionAbsolute.x &&\n        y >= n.positionAbsolute.y &&\n        x + width <= n.positionAbsolute.x + n.data.width &&\n        y + height <= n.positionAbsolute.y + n.data.height\n      );\n      if (!parentNode) {\n        alert('Ports can only be placed inside Cards.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    }\n\n    const position = {\n      x: parentNode ? x - (parentNode.positionAbsolute ? parentNode.positionAbsolute.x : parentNode.position.x) : x,\n      y: parentNode ? y - (parentNode.positionAbsolute ? parentNode.positionAbsolute.y : parentNode.position.y) : y,\n    };\n\n    const data = {\n      id: newNodeId,\n      label: newNodeId,\n      width,\n      height,\n    };\n\n    switch (drawingMode) {\n      case 'ne':\n        data.NE_IP = '';\n        data.role = '';\n        break;\n      case 'card':\n        data.card_name = '';\n        data.slot_no = '';\n        data.service_card = false;\n        break;\n      case 'port':\n        data.port_no = '';\n        data.port_type = '';\n        data.if_index = '';\n        break;\n      default:\n        break;\n    }\n\n    newNode = {\n      id: newNodeId,\n      type: drawingMode,\n      position,\n      data,\n      parentNode: parentNode ? parentNode.id : undefined,\n      extent: parentNode ? 'parent' : undefined,\n    };\n\n    setNodes((nds) => nds.concat(newNode));\n    setIsDrawing(false);\n    setPreview(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <ReactFlowProvider>\n        <Sidebar drawingMode={drawingMode} setDrawingMode={setDrawingMode} />\n        <div \n          className=\"canvas-container\" \n          ref={reactFlowWrapper}\n        >\n          {drawingMode && (\n            <div\n              className=\"drawing-overlay\"\n              onMouseDown={onMouseDown}\n              onMouseMove={onMouseMove}\n              onMouseUp={onMouseUp}\n            >\n              {preview && (\n                <div\n                  className=\"preview-node\"\n                  style={{\n                    position: 'absolute',\n                    left: preview.x,\n                    top: preview.y,\n                    width: preview.width,\n                    height: preview.height,\n                    border: '1px dashed #000',\n                  }}\n                />\n              )}\n            </div>\n          )}\n          {drawingMode && (\n            <div className=\"drawing-prompt\">\n              Drawing mode active. Press Esc to cancel.\n            </div>\n          )}\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onNodeClick={onNodeClick}\n            onEdgeClick={onEdgeClick}\n            nodeTypes={nodeTypes}\n            onlyRenderVisibleElements\n            panOnDrag={!drawingMode}\n            zoomOnScroll={!drawingMode}\n            panOnScroll={false}\n            nodesDraggable={!drawingMode}\n            style={{ pointerEvents: drawingMode ? 'none' : 'auto' }}\n          >\n            <Controls />\n            <MiniMap />\n            <Background variant=\"dots\" gap={12} size={1} />\n          </ReactFlow>\n        </div>\n        <ConfigPanel selectedElement={selectedElement} updateNodeConfig={updateNodeConfig} deleteNode={deleteNode} updateEdgeConfig={updateEdgeConfig} />\n        <button onClick={handleGenerateConfig} className=\"save-btn\">Generate Configuration</button>\n        <button onClick={handleClearDiagram} className=\"clear-btn\">Clear Diagram</button>\n        {generatedConfig && (\n            <div className=\"generated-config\">\n                <h2>Generated Configuration</h2>\n                <pre>{generatedConfig}</pre>\n            </div>\n        )}\n        \n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}