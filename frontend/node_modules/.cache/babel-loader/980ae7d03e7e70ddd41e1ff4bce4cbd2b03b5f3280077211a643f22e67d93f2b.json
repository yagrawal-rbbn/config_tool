{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yagrawal\\\\OneDrive - Ribbon Communications Operating Company, Inc\\\\Desktop\\\\config_tool\\\\frontend\\\\src\\\\components\\\\nodes\\\\PortNode.js\";\nimport React, { memo } from 'react';\nimport { Handle, Position } from 'reactflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortNode = ({\n  data,\n  isConnectable\n}) => {\n  const isSelected = data.isSelected ? 'port-source-selected' : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `react-flow__node-port ${isSelected}`,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      isConnectable: isConnectable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      isConnectable: isConnectable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = PortNode;\nexport default _c2 = /*#__PURE__*/memo(PortNode);\nvar _c, _c2;\n$RefreshReg$(_c, \"PortNode\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Handle","Position","jsxDEV","_jsxDEV","PortNode","data","isConnectable","isSelected","className","children","type","position","Right","fileName","_jsxFileName","lineNumber","columnNumber","Left","label","_c","_c2","$RefreshReg$"],"sources":["C:/Users/yagrawal/OneDrive - Ribbon Communications Operating Company, Inc/Desktop/config_tool/frontend/src/components/nodes/PortNode.js"],"sourcesContent":["import React, { memo } from 'react';\nimport { Handle, Position } from 'reactflow';\n\nconst PortNode = ({ data, isConnectable }) => {\n  const isSelected = data.isSelected ? 'port-source-selected' : '';\n\n  return (\n    <div className={`react-flow__node-port ${isSelected}`}>\n        <Handle type=\"source\" position={Position.Right} isConnectable={isConnectable} />\n        <Handle type=\"target\" position={Position.Left} isConnectable={isConnectable} />\n        <div>{data.label}</div>\n    </div>\n  );\n};\n\nexport default memo(PortNode);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAC5C,MAAMC,UAAU,GAAGF,IAAI,CAACE,UAAU,GAAG,sBAAsB,GAAG,EAAE;EAEhE,oBACEJ,OAAA;IAAKK,SAAS,EAAE,yBAAyBD,UAAU,EAAG;IAAAE,QAAA,gBAClDN,OAAA,CAACH,MAAM;MAACU,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAEV,QAAQ,CAACW,KAAM;MAACN,aAAa,EAAEA;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChFb,OAAA,CAACH,MAAM;MAACU,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAEV,QAAQ,CAACgB,IAAK;MAACX,aAAa,EAAEA;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Eb,OAAA;MAAAM,QAAA,EAAMJ,IAAI,CAACa;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACG,EAAA,GAVIf,QAAQ;AAYd,eAAAgB,GAAA,gBAAerB,IAAI,CAACK,QAAQ,CAAC;AAAC,IAAAe,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}