{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yagrawal\\\\OneDrive - Ribbon Communications Operating Company, Inc\\\\Desktop\\\\config_tool\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './components/Sidebar';\nimport ConfigPanel from './components/ConfigPanel';\nimport NENode from './components/nodes/NENode';\nimport CardNode from './components/nodes/CardNode';\nimport PortNode from './components/nodes/PortNode';\nimport { generateConfiguration } from './api';\nimport './App.css';\nimport './components/nodes/node-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  ne: NENode,\n  card: CardNode,\n  port: PortNode\n};\nconst App = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [generatedConfig, setGeneratedConfig] = useState('');\n  const [drawingMode, setDrawingMode] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState(null);\n  const [preview, setPreview] = useState(null);\n  useEffect(() => {\n    const handleEsc = event => {\n      if (event.keyCode === 27) {\n        setDrawingMode(null);\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n  const id = useRef(0);\n  const getId = type => `${type}_${id.current++}`;\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    const findNode = id => nodes.find(n => n.id === id);\n    const element = findNode(node.id);\n    if (!element) return;\n    setSelectedElement({\n      id: element.id,\n      type: element.type,\n      data: element.data\n    });\n  }, [nodes]);\n  const updateNodeConfig = (nodeId, field, value) => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        const newData = {\n          ...node.data,\n          [field]: value\n        };\n        if (field === 'NE_IP' || field === 'card_name' || field === 'port_no') {\n          newData.label = `${value}`;\n        }\n        return {\n          ...node,\n          data: newData\n        };\n      }\n      return node;\n    }));\n    if (selectedElement && selectedElement.id === nodeId) {\n      setSelectedElement(prev => ({\n        ...prev,\n        data: {\n          ...prev.data,\n          [field]: value\n        }\n      }));\n    }\n  };\n  const handleGenerateConfig = async () => {\n    const config = await generateConfiguration(nodes, edges);\n    if (config) {\n      setGeneratedConfig(config);\n    }\n  };\n  const onMouseDown = event => {\n    if (!drawingMode || !reactFlowInstance) return;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    };\n    setIsDrawing(true);\n    setStartPos(position);\n    setPreview({\n      x: position.x,\n      y: position.y,\n      width: 0,\n      height: 0\n    });\n  };\n  const onMouseMove = event => {\n    if (!isDrawing) return;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    };\n    const width = Math.abs(position.x - startPos.x);\n    const height = Math.abs(position.y - startPos.y);\n    const newX = Math.min(position.x, startPos.x);\n    const newY = Math.min(position.y, startPos.y);\n    setPreview({\n      x: newX,\n      y: newY,\n      width,\n      height\n    });\n  };\n  const onMouseUp = event => {\n    if (!isDrawing || !preview || preview.width === 0 || preview.height === 0) {\n      setIsDrawing(false);\n      setPreview(null);\n      return;\n    }\n    event.preventDefault();\n    const projectedPosition = reactFlowInstance.project({\n      x: preview.x,\n      y: preview.y\n    });\n    const {\n      x,\n      y,\n      width,\n      height\n    } = {\n      ...preview,\n      ...projectedPosition\n    };\n    const newNodeId = getId(drawingMode);\n    let newNode;\n    let parentNode = null;\n    if (drawingMode === 'card') {\n      parentNode = nodes.find(n => n.type === 'ne' && x >= n.position.x && y >= n.position.y && x + width <= n.position.x + n.data.width && y + height <= n.position.y + n.data.height);\n      if (!parentNode) {\n        alert('Cards can only be placed inside Network Elements.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    } else if (drawingMode === 'port') {\n      parentNode = nodes.find(n => n.type === 'card' && n.positionAbsolute && x >= n.positionAbsolute.x && y >= n.positionAbsolute.y && x + width <= n.positionAbsolute.x + n.data.width && y + height <= n.positionAbsolute.y + n.data.height);\n      if (!parentNode) {\n        alert('Ports can only be placed inside Cards.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    }\n    const position = {\n      x: parentNode ? x - (parentNode.positionAbsolute ? parentNode.positionAbsolute.x : parentNode.position.x) : x,\n      y: parentNode ? y - (parentNode.positionAbsolute ? parentNode.positionAbsolute.y : parentNode.position.y) : y\n    };\n    const data = {\n      id: newNodeId,\n      label: newNodeId,\n      width,\n      height\n    };\n    switch (drawingMode) {\n      case 'ne':\n        data.NE_IP = '';\n        data.role = '';\n        break;\n      case 'card':\n        data.card_name = '';\n        data.slot_no = '';\n        data.service_card = false;\n        break;\n      case 'port':\n        data.port_no = '';\n        data.port_type = '';\n        data.if_index = '';\n        break;\n      default:\n        break;\n    }\n    newNode = {\n      id: newNodeId,\n      type: drawingMode,\n      position,\n      data,\n      parentNode: parentNode ? parentNode.id : undefined,\n      extent: parentNode ? 'parent' : undefined\n    };\n    setNodes(nds => nds.concat(newNode));\n    setIsDrawing(false);\n    setPreview(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        drawingMode: drawingMode,\n        setDrawingMode: setDrawingMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        ref: reactFlowWrapper,\n        children: [drawingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drawing-overlay\",\n          onMouseDown: onMouseDown,\n          onMouseMove: onMouseMove,\n          onMouseUp: onMouseUp,\n          children: preview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-node\",\n            style: {\n              position: 'absolute',\n              left: preview.x,\n              top: preview.y,\n              width: preview.width,\n              height: preview.height,\n              border: '1px dashed #000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), drawingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drawing-prompt\",\n          children: \"Drawing mode active. Press Esc to cancel.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onNodeClick: onNodeClick,\n          nodeTypes: nodeTypes,\n          fitView: true,\n          panOnDrag: !drawingMode,\n          panOnScroll: !drawingMode,\n          nodesDraggable: !drawingMode,\n          style: {\n            pointerEvents: drawingMode ? 'none' : 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfigPanel, {\n        selectedElement: selectedElement,\n        updateNodeConfig: updateNodeConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateConfig,\n        className: \"save-btn\",\n        children: \"Generate Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), generatedConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: generatedConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bgpk61uu+wDZb7zQltSGT3DJQrM=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Background","Sidebar","ConfigPanel","NENode","CardNode","PortNode","generateConfiguration","jsxDEV","_jsxDEV","nodeTypes","ne","card","port","App","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","selectedElement","setSelectedElement","generatedConfig","setGeneratedConfig","drawingMode","setDrawingMode","isDrawing","setIsDrawing","startPos","setStartPos","preview","setPreview","handleEsc","event","keyCode","window","addEventListener","removeEventListener","id","getId","type","current","onConnect","params","eds","onNodeClick","node","findNode","find","n","element","data","updateNodeConfig","nodeId","field","value","nds","map","newData","label","prev","handleGenerateConfig","config","onMouseDown","preventDefault","reactFlowBounds","getBoundingClientRect","position","x","clientX","left","y","clientY","top","width","height","onMouseMove","Math","abs","newX","min","newY","onMouseUp","projectedPosition","project","newNodeId","newNode","parentNode","alert","positionAbsolute","NE_IP","role","card_name","slot_no","service_card","port_no","port_type","if_index","undefined","extent","concat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","onInit","fitView","panOnDrag","panOnScroll","nodesDraggable","pointerEvents","variant","gap","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yagrawal/OneDrive - Ribbon Communications Operating Company, Inc/Desktop/config_tool/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n  MiniMap,\n  Background,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport Sidebar from './components/Sidebar';\nimport ConfigPanel from './components/ConfigPanel';\nimport NENode from './components/nodes/NENode';\nimport CardNode from './components/nodes/CardNode';\nimport PortNode from './components/nodes/PortNode';\nimport { generateConfiguration } from './api';\n\nimport './App.css';\nimport './components/nodes/node-styles.css';\n\nconst nodeTypes = {\n  ne: NENode,\n  card: CardNode,\n  port: PortNode,\n};\n\nconst App = () => {\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [generatedConfig, setGeneratedConfig] = useState('');\n  \n  const [drawingMode, setDrawingMode] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState(null);\n  const [preview, setPreview] = useState(null);\n\n  useEffect(() => {\n    const handleEsc = (event) => {\n      if (event.keyCode === 27) {\n        setDrawingMode(null);\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n\n  const id = useRef(0);\n  const getId = (type) => `${type}_${id.current++}`;\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n\n  const onNodeClick = useCallback((event, node) => {\n    const findNode = (id) => nodes.find(n => n.id === id);\n    const element = findNode(node.id);\n    \n    if(!element) return;\n\n    setSelectedElement({\n        id: element.id,\n        type: element.type,\n        data: element.data\n    });\n  }, [nodes]);\n\n  const updateNodeConfig = (nodeId, field, value) => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === nodeId) {\n          const newData = { ...node.data, [field]: value };\n          if (field === 'NE_IP' || field === 'card_name' || field === 'port_no') {\n              newData.label = `${value}`;\n          }\n          return { ...node, data: newData };\n        }\n        return node;\n      })\n    );\n    if (selectedElement && selectedElement.id === nodeId) {\n        setSelectedElement(prev => ({...prev, data: {...prev.data, [field]: value}}));\n    }\n  };\n  \n  const handleGenerateConfig = async () => {\n      const config = await generateConfiguration(nodes, edges);\n      if (config) {\n        setGeneratedConfig(config);\n      }\n  };\n\n  const onMouseDown = (event) => {\n    if (!drawingMode || !reactFlowInstance) return;\n    event.preventDefault();\n    \n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    };\n\n    setIsDrawing(true);\n    setStartPos(position);\n    setPreview({ x: position.x, y: position.y, width: 0, height: 0 });\n  };\n\n  const onMouseMove = (event) => {\n    if (!isDrawing) return;\n    event.preventDefault();\n\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    };\n\n    const width = Math.abs(position.x - startPos.x);\n    const height = Math.abs(position.y - startPos.y);\n    const newX = Math.min(position.x, startPos.x);\n    const newY = Math.min(position.y, startPos.y);\n\n    setPreview({ x: newX, y: newY, width, height });\n  };\n\n  const onMouseUp = (event) => {\n    if (!isDrawing || !preview || preview.width === 0 || preview.height === 0) {\n      setIsDrawing(false);\n      setPreview(null);\n      return;\n    }\n    event.preventDefault();\n\n    const projectedPosition = reactFlowInstance.project({\n        x: preview.x,\n        y: preview.y,\n    });\n\n    const { x, y, width, height } = { ...preview, ...projectedPosition };\n    const newNodeId = getId(drawingMode);\n    let newNode;\n    let parentNode = null;\n\n    if (drawingMode === 'card') {\n      parentNode = nodes.find(n => \n        n.type === 'ne' &&\n        x >= n.position.x &&\n        y >= n.position.y &&\n        x + width <= n.position.x + n.data.width &&\n        y + height <= n.position.y + n.data.height\n      );\n      if (!parentNode) {\n        alert('Cards can only be placed inside Network Elements.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    } else if (drawingMode === 'port') {\n      parentNode = nodes.find(n =>\n        n.type === 'card' &&\n        n.positionAbsolute &&\n        x >= n.positionAbsolute.x &&\n        y >= n.positionAbsolute.y &&\n        x + width <= n.positionAbsolute.x + n.data.width &&\n        y + height <= n.positionAbsolute.y + n.data.height\n      );\n      if (!parentNode) {\n        alert('Ports can only be placed inside Cards.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    }\n\n    const position = {\n      x: parentNode ? x - (parentNode.positionAbsolute ? parentNode.positionAbsolute.x : parentNode.position.x) : x,\n      y: parentNode ? y - (parentNode.positionAbsolute ? parentNode.positionAbsolute.y : parentNode.position.y) : y,\n    };\n\n    const data = {\n      id: newNodeId,\n      label: newNodeId,\n      width,\n      height,\n    };\n\n    switch (drawingMode) {\n      case 'ne':\n        data.NE_IP = '';\n        data.role = '';\n        break;\n      case 'card':\n        data.card_name = '';\n        data.slot_no = '';\n        data.service_card = false;\n        break;\n      case 'port':\n        data.port_no = '';\n        data.port_type = '';\n        data.if_index = '';\n        break;\n      default:\n        break;\n    }\n\n    newNode = {\n      id: newNodeId,\n      type: drawingMode,\n      position,\n      data,\n      parentNode: parentNode ? parentNode.id : undefined,\n      extent: parentNode ? 'parent' : undefined,\n    };\n\n    setNodes((nds) => nds.concat(newNode));\n    setIsDrawing(false);\n    setPreview(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <ReactFlowProvider>\n        <Sidebar drawingMode={drawingMode} setDrawingMode={setDrawingMode} />\n        <div \n          className=\"canvas-container\" \n          ref={reactFlowWrapper}\n        >\n          {drawingMode && (\n            <div\n              className=\"drawing-overlay\"\n              onMouseDown={onMouseDown}\n              onMouseMove={onMouseMove}\n              onMouseUp={onMouseUp}\n            >\n              {preview && (\n                <div\n                  className=\"preview-node\"\n                  style={{\n                    position: 'absolute',\n                    left: preview.x,\n                    top: preview.y,\n                    width: preview.width,\n                    height: preview.height,\n                    border: '1px dashed #000',\n                  }}\n                />\n              )}\n            </div>\n          )}\n          {drawingMode && (\n            <div className=\"drawing-prompt\">\n              Drawing mode active. Press Esc to cancel.\n            </div>\n          )}\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onNodeClick={onNodeClick}\n            nodeTypes={nodeTypes}\n            fitView\n            panOnDrag={!drawingMode}\n            panOnScroll={!drawingMode}\n            nodesDraggable={!drawingMode}\n            style={{ pointerEvents: drawingMode ? 'none' : 'auto' }}\n          >\n            <Controls />\n            <MiniMap />\n            <Background variant=\"dots\" gap={12} size={1} />\n          </ReactFlow>\n        </div>\n        <ConfigPanel selectedElement={selectedElement} updateNodeConfig={updateNodeConfig} />\n        <button onClick={handleGenerateConfig} className=\"save-btn\">Generate Configuration</button>\n        {generatedConfig && (\n            <div className=\"generated-config\">\n                <h2>Generated Configuration</h2>\n                <pre>{generatedConfig}</pre>\n            </div>\n        )}\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}