{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yagrawal\\\\OneDrive - Ribbon Communications Operating Company, Inc\\\\Desktop\\\\config_tool\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './components/Sidebar';\nimport ConfigPanel from './components/ConfigPanel';\nimport NENode from './components/nodes/NENode';\nimport CardNode from './components/nodes/CardNode';\nimport PortNode from './components/nodes/PortNode';\nimport { generateConfiguration } from './api';\nimport './App.css';\nimport './components/nodes/node-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\nconst getId = type => `${type}_${id++}`;\nconst nodeTypes = {\n  ne: NENode,\n  card: CardNode,\n  port: PortNode\n};\nconst App = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [generatedConfig, setGeneratedConfig] = useState('');\n  const [drawingMode, setDrawingMode] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    if (drawingMode) return;\n    const findNode = id => nodes.find(n => n.id === id);\n    const element = findNode(node.id);\n    if (!element) return;\n    setSelectedElement({\n      id: element.id,\n      type: element.type,\n      data: element.data\n    });\n  }, [nodes, drawingMode]);\n  const updateNodeConfig = (nodeId, field, value) => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === nodeId) {\n        const newData = {\n          ...node.data,\n          [field]: value\n        };\n        if (field === 'NE_IP' || field === 'card_name' || field === 'port_no') {\n          newData.label = `${value}`;\n        }\n        return {\n          ...node,\n          data: newData\n        };\n      }\n      return node;\n    }));\n    if (selectedElement && selectedElement.id === nodeId) {\n      setSelectedElement(prev => ({\n        ...prev,\n        data: {\n          ...prev.data,\n          [field]: value\n        }\n      }));\n    }\n  };\n  const handleGenerateConfig = async () => {\n    const config = await generateConfiguration(nodes, edges);\n    if (config) {\n      setGeneratedConfig(config);\n    }\n  };\n  const onMouseDown = event => {\n    if (!drawingMode || !reactFlowInstance) return;\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    setIsDrawing(true);\n    setStartPos(position);\n    setPreview({\n      x: position.x,\n      y: position.y,\n      width: 0,\n      height: 0\n    });\n  };\n  const onMouseMove = event => {\n    if (!isDrawing || !reactFlowInstance) return;\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const width = Math.abs(position.x - startPos.x);\n    const height = Math.abs(position.y - startPos.y);\n    const newX = Math.min(position.x, startPos.x);\n    const newY = Math.min(position.y, startPos.y);\n    setPreview({\n      x: newX,\n      y: newY,\n      width,\n      height\n    });\n  };\n  const onMouseUp = () => {\n    if (!isDrawing || !preview || preview.width === 0 || preview.height === 0) {\n      setIsDrawing(false);\n      setPreview(null);\n      return;\n    }\n    const {\n      x,\n      y,\n      width,\n      height\n    } = preview;\n    const newNodeId = getId(drawingMode);\n    let newNode;\n    let parentNode = null;\n    if (drawingMode === 'card') {\n      parentNode = nodes.find(n => n.type === 'ne' && x >= n.position.x && y >= n.position.y && x + width <= n.position.x + n.width && y + height <= n.position.y + n.height);\n      if (!parentNode) {\n        alert('Cards can only be placed inside Network Elements.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    } else if (drawingMode === 'port') {\n      parentNode = nodes.find(n => n.type === 'card' && x >= n.positionAbsolute.x && y >= n.positionAbsolute.y && x + width <= n.positionAbsolute.x + n.width && y + height <= n.positionAbsolute.y + n.height);\n      if (!parentNode) {\n        alert('Ports can only be placed inside Cards.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    }\n    const position = {\n      x: parentNode ? x - (parentNode.positionAbsolute ? parentNode.positionAbsolute.x : parentNode.position.x) : x,\n      y: parentNode ? y - (parentNode.positionAbsolute ? parentNode.positionAbsolute.y : parentNode.position.y) : y\n    };\n    const data = {\n      id: newNodeId,\n      label: drawingMode,\n      width,\n      height\n    };\n    switch (drawingMode) {\n      case 'ne':\n        data.NE_IP = '';\n        data.role = '';\n        break;\n      case 'card':\n        data.card_name = '';\n        data.slot_no = '';\n        data.service_card = false;\n        break;\n      case 'port':\n        data.port_no = '';\n        data.port_type = '';\n        data.if_index = '';\n        break;\n      default:\n        break;\n    }\n    newNode = {\n      id: newNodeId,\n      type: drawingMode,\n      position,\n      data,\n      parentNode: parentNode ? parentNode.id : undefined,\n      extent: parentNode ? 'parent' : undefined\n    };\n    setNodes(nds => nds.concat(newNode));\n    setIsDrawing(false);\n    setPreview(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        drawingMode: drawingMode,\n        setDrawingMode: setDrawingMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        ref: reactFlowWrapper,\n        onMouseDown: onMouseDown,\n        onMouseMove: onMouseMove,\n        onMouseUp: onMouseUp,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onNodeClick: onNodeClick,\n          nodeTypes: nodeTypes,\n          fitView: true,\n          style: {\n            pointerEvents: drawingMode ? 'none' : 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-node\",\n            style: {\n              position: 'absolute',\n              left: preview.x,\n              top: preview.y,\n              width: preview.width,\n              height: preview.height,\n              border: '1px dashed #000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfigPanel, {\n        selectedElement: selectedElement,\n        updateNodeConfig: updateNodeConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateConfig,\n        className: \"save-btn\",\n        children: \"Generate Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), generatedConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: generatedConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3AVL1WagJkh7UmcqGOxBCIyeDRw=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Background","Sidebar","ConfigPanel","NENode","CardNode","PortNode","generateConfiguration","jsxDEV","_jsxDEV","id","getId","type","nodeTypes","ne","card","port","App","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","selectedElement","setSelectedElement","generatedConfig","setGeneratedConfig","drawingMode","setDrawingMode","isDrawing","setIsDrawing","startPos","setStartPos","preview","setPreview","onConnect","params","eds","onNodeClick","event","node","findNode","find","n","element","data","updateNodeConfig","nodeId","field","value","nds","map","newData","label","prev","handleGenerateConfig","config","onMouseDown","reactFlowBounds","current","getBoundingClientRect","position","project","x","clientX","left","y","clientY","top","width","height","onMouseMove","Math","abs","newX","min","newY","onMouseUp","newNodeId","newNode","parentNode","alert","positionAbsolute","NE_IP","role","card_name","slot_no","service_card","port_no","port_type","if_index","undefined","extent","concat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onInit","fitView","style","pointerEvents","variant","gap","size","border","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yagrawal/OneDrive - Ribbon Communications Operating Company, Inc/Desktop/config_tool/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n  MiniMap,\n  Background,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport Sidebar from './components/Sidebar';\nimport ConfigPanel from './components/ConfigPanel';\nimport NENode from './components/nodes/NENode';\nimport CardNode from './components/nodes/CardNode';\nimport PortNode from './components/nodes/PortNode';\nimport { generateConfiguration } from './api';\n\nimport './App.css';\nimport './components/nodes/node-styles.css';\n\nlet id = 0;\nconst getId = (type) => `${type}_${id++}`;\n\nconst nodeTypes = {\n  ne: NENode,\n  card: CardNode,\n  port: PortNode,\n};\n\nconst App = () => {\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [generatedConfig, setGeneratedConfig] = useState('');\n  \n  const [drawingMode, setDrawingMode] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState(null);\n  const [preview, setPreview] = useState(null);\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n\n  const onNodeClick = useCallback((event, node) => {\n    if (drawingMode) return;\n    const findNode = (id) => nodes.find(n => n.id === id);\n    const element = findNode(node.id);\n    \n    if(!element) return;\n\n    setSelectedElement({\n        id: element.id,\n        type: element.type,\n        data: element.data\n    });\n  }, [nodes, drawingMode]);\n\n  const updateNodeConfig = (nodeId, field, value) => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === nodeId) {\n          const newData = { ...node.data, [field]: value };\n          if (field === 'NE_IP' || field === 'card_name' || field === 'port_no') {\n              newData.label = `${value}`;\n          }\n          return { ...node, data: newData };\n        }\n        return node;\n      })\n    );\n    if (selectedElement && selectedElement.id === nodeId) {\n        setSelectedElement(prev => ({...prev, data: {...prev.data, [field]: value}}));\n    }\n  };\n  \n  const handleGenerateConfig = async () => {\n      const config = await generateConfiguration(nodes, edges);\n      if (config) {\n        setGeneratedConfig(config);\n      }\n  };\n\n  const onMouseDown = (event) => {\n    if (!drawingMode || !reactFlowInstance) return;\n    \n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    });\n\n    setIsDrawing(true);\n    setStartPos(position);\n    setPreview({ x: position.x, y: position.y, width: 0, height: 0 });\n  };\n\n  const onMouseMove = (event) => {\n    if (!isDrawing || !reactFlowInstance) return;\n\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    });\n\n    const width = Math.abs(position.x - startPos.x);\n    const height = Math.abs(position.y - startPos.y);\n    const newX = Math.min(position.x, startPos.x);\n    const newY = Math.min(position.y, startPos.y);\n\n    setPreview({ x: newX, y: newY, width, height });\n  };\n\n  const onMouseUp = () => {\n    if (!isDrawing || !preview || preview.width === 0 || preview.height === 0) {\n      setIsDrawing(false);\n      setPreview(null);\n      return;\n    }\n\n    const { x, y, width, height } = preview;\n    const newNodeId = getId(drawingMode);\n    let newNode;\n    let parentNode = null;\n\n    if (drawingMode === 'card') {\n      parentNode = nodes.find(n => \n        n.type === 'ne' &&\n        x >= n.position.x &&\n        y >= n.position.y &&\n        x + width <= n.position.x + n.width &&\n        y + height <= n.position.y + n.height\n      );\n      if (!parentNode) {\n        alert('Cards can only be placed inside Network Elements.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    } else if (drawingMode === 'port') {\n      parentNode = nodes.find(n =>\n        n.type === 'card' &&\n        x >= n.positionAbsolute.x &&\n        y >= n.positionAbsolute.y &&\n        x + width <= n.positionAbsolute.x + n.width &&\n        y + height <= n.positionAbsolute.y + n.height\n      );\n      if (!parentNode) {\n        alert('Ports can only be placed inside Cards.');\n        setIsDrawing(false);\n        setPreview(null);\n        return;\n      }\n    }\n\n    const position = {\n      x: parentNode ? x - (parentNode.positionAbsolute ? parentNode.positionAbsolute.x : parentNode.position.x) : x,\n      y: parentNode ? y - (parentNode.positionAbsolute ? parentNode.positionAbsolute.y : parentNode.position.y) : y,\n    };\n\n    const data = {\n      id: newNodeId,\n      label: drawingMode,\n      width,\n      height,\n    };\n\n    switch (drawingMode) {\n      case 'ne':\n        data.NE_IP = '';\n        data.role = '';\n        break;\n      case 'card':\n        data.card_name = '';\n        data.slot_no = '';\n        data.service_card = false;\n        break;\n      case 'port':\n        data.port_no = '';\n        data.port_type = '';\n        data.if_index = '';\n        break;\n      default:\n        break;\n    }\n\n    newNode = {\n      id: newNodeId,\n      type: drawingMode,\n      position,\n      data,\n      parentNode: parentNode ? parentNode.id : undefined,\n      extent: parentNode ? 'parent' : undefined,\n    };\n\n    setNodes((nds) => nds.concat(newNode));\n    setIsDrawing(false);\n    setPreview(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <ReactFlowProvider>\n        <Sidebar drawingMode={drawingMode} setDrawingMode={setDrawingMode} />\n        <div \n          className=\"canvas-container\" \n          ref={reactFlowWrapper}\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n        >\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onNodeClick={onNodeClick}\n            nodeTypes={nodeTypes}\n            fitView\n            style={{ pointerEvents: drawingMode ? 'none' : 'auto' }}\n          >\n            <Controls />\n            <MiniMap />\n            <Background variant=\"dots\" gap={12} size={1} />\n            {preview && (\n              <div\n                className=\"preview-node\"\n                style={{\n                  position: 'absolute',\n                  left: preview.x,\n                  top: preview.y,\n                  width: preview.width,\n                  height: preview.height,\n                  border: '1px dashed #000',\n                }}\n              />\n            )}\n          </ReactFlow>\n        </div>\n        <ConfigPanel selectedElement={selectedElement} updateNodeConfig={updateNodeConfig} />\n        <button onClick={handleGenerateConfig} className=\"save-btn\">Generate Configuration</button>\n        {generatedConfig && (\n            <div className=\"generated-config\">\n                <h2>Generated Configuration</h2>\n                <pre>{generatedConfig}</pre>\n            </div>\n        )}\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}